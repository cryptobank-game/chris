<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mural de Sorteio Cripto</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #0a1f3a;
            margin: 0;
            padding: 20px;
            overflow: hidden;
            position: relative;
            min-height: 100vh;
        }

        /* Círculos de controle na esquerda - MODIFICADO para vertical */
        .control-panel {
            position: fixed;
            left: 20px;
            top: 20px;
            display: flex;
            flex-direction: column; /* Alterado para coluna */
            gap: 15px;
            z-index: 100;
        }

        .control-item {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .control-circle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-size: cover;
            background-position: center;
            cursor: pointer;
            box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
            transition: transform 0.3s;
        }

        .control-circle:hover {
            transform: scale(1.1);
        }

        .control-value {
            color: white;
            font-size: 30px;
            font-weight: bold;
            text-shadow: 0 0 3px rgba(0, 150, 255, 0.7);
            min-width: 60px;
        }

        /* Restante do seu CSS existente... */
        .floating-image {
            position: absolute;
            border-radius: 50%;
            background-size: cover;
            background-position: center;
            animation: floatDown 15s linear infinite;
            opacity: 0.6;
            z-index: 1;
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);
        }

        @keyframes floatDown {
            0% {
                transform: translateY(-100px) translateX(0) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 0.6;
            }
            90% {
                opacity: 0.6;
            }
            100% {
                transform: translateY(100vh) translateX(20px) rotate(360deg);
                opacity: 0;
            }
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 0 25px rgba(0, 100, 255, 0.3);
            position: relative;
            z-index: 10;
            backdrop-filter: blur(3px);
        }

        h1 {
            color: #ffffff;
            text-align: center;
            margin-bottom: 30px;
            text-shadow: 0 0 10px rgba(0, 150, 255, 0.7);
        }

        .mural {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 15px;
            margin-bottom: 30px;
        }

        .resultado {
            background-color: white;
            border: none;
            border-radius: 8px;
            height: 80px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 28px;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            user-select: none;
        }

        .blink {
            animation: blinkBlue 0.5s 3;
        }

        @keyframes blinkBlue {
            0% { background-color: white; }
            50% { background-color: #64b5f6; }
            100% { background-color: white; }
        }

        .positive {
            background-color: #c8e6c9;
            animation: glowGreen 2s infinite alternate;
            box-shadow: 0 0 15px #4caf50;
        }

        @keyframes glowGreen {
            from { box-shadow: 0 0 5px #4caf50; }
            to { box-shadow: 0 0 20px #4caf50; }
        }

        .negative {
            background-color: #ffcdd2;
            animation: glowRed 2s infinite alternate;
            box-shadow: 0 0 15px #f44336;
        }

        @keyframes glowRed {
            from { box-shadow: 0 0 5px #f44336; }
            to { box-shadow: 0 0 20px #f44336; }
        }

        .sortear-btn {
            display: block;
            width: 200px;
            margin: 0 auto;
            padding: 12px 0;
            background: linear-gradient(135deg, #2196F3, #1976D2);
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }

        .sortear-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }

        .sortear-btn:active {
            transform: translateY(1px);
        }

        .resultado-final {
            text-align: center;
            margin-top: 25px;
            font-size: 24px;
            font-weight: bold;
            color: white;
            min-height: 40px;
            padding: 15px;
            border-radius: 8px;
            background-color: rgba(0, 0, 0, 0.2);
            transition: all 0.5s;
        }
    </style>
</head>
<body>
    <!-- Painel de controle na esquerda - MODIFICADO para vertical -->
    <div class="control-panel">
        <div class="control-item">
            <div class="control-circle" id="circle1" style="background-image: url('https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png')"></div>
            <div class="control-value" id="value1">50</div>
        </div>
        <div class="control-item">
            <div class="control-circle" id="circle2" style="background-image: url('https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png')"></div>
            <div class="control-value" id="value2">25</div>
        </div>
    </div>

    <!-- Container principal -->
    <div class="container">
        <h1>Roleta de Baixo Risco</h1>
       
        <!-- Mural com 10 resultados -->
        <div class="mural">
            <div class="resultado" data-value="3">+3</div>
            <div class="resultado" data-value="6">+6</div>
            <div class="resultado" data-value="-3">-3</div>
            <div class="resultado" data-value="2">+2</div>
            <div class="resultado" data-value="-1">-1</div>
            <div class="resultado" data-value="1">+1</div>
            <div class="resultado" data-value="-2">-2</div>
            <div class="resultado" data-value="-4">-4</div>
            <div class="resultado" data-value="5">+5</div>
            <div class="resultado" data-value="4">+4</div>
        </div>
       
        <!-- Botão de sorteio -->
        <button class="sortear-btn" id="sortearBtn">🎯 Sortear</button>
       
        <!-- Área do resultado -->
        <div class="resultado-final" id="resultadoFinal"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Array com os links das imagens que você quer usar
            const imageUrls = [
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png',
                'https://images.vexels.com/media/users/3/266057/isolated/preview/658492f2c5ab9c1cf7dd6902eaf54932-icone-de-dinheiro-de-moeda-de-sinal-bitcoin.png',
                'https://www.citypng.com/public/uploads/preview/hd-dogecoin-crypto-coin-png-701751695051848gsrsqxblqc.png',
                'https://png.pngtree.com/png-clipart/20230817/original/pngtree-solana-sol-cryptocurrency-symbol-depicted-on-a-plain-white-backdrop-vector-picture-image_10957910.png',
                'https://cdn4.iconfinder.com/data/icons/crypto-currency-and-coin-2/256/cardano_ada-512.png',
                'https://static-00.iconduck.com/assets.00/xrp-cryptocurrency-icon-2048x2048-2a0bicgj.png'
            ];

            // Função para criar os círculos flutuantes
            function createFloatingImages() {
                const container = document.body;
                
                imageUrls.forEach((url, index) => {
                    const size = Math.floor(Math.random() * 30) + 55;
                    const left = Math.floor(Math.random() * 90) + 5;
                    const delay = Math.random() * 20;
                    const duration = 15 + Math.random() * 10;
                    
                    const img = document.createElement('div');
                    img.className = 'floating-image';
                    img.style.backgroundImage = `url('${url}')`;
                    img.style.width = `${size}px`;
                    img.style.height = `${size}px`;
                    img.style.left = `${left}%`;
                    img.style.animationDelay = `${delay}s`;
                    img.style.animationDuration = `${duration}s`;
                    
                    container.insertBefore(img, container.firstChild);
                });
            }

            // Chamada para criar as imagens flutuantes
            createFloatingImages();

            const resultados = document.querySelectorAll('.resultado');
            const sortearBtn = document.getElementById('sortearBtn');
            const resultadoFinal = document.getElementById('resultadoFinal');
            const circle1 = document.getElementById('circle1');
            const circle2 = document.getElementById('circle2');
            const value1 = document.getElementById('value1');
            const value2 = document.getElementById('value2');

            // Variável para armazenar o último valor sorteado
            let ultimoValorSorteado = 0;
           
            // Função para fazer vários números piscarem antes de selecionar o resultado
            function animacaoPreSorteio(callback) {
                let count = 0;
                const maxBlinks = 12;
                const interval = 100;
               
                const blinkInterval = setInterval(() => {
                    resultados.forEach(r => r.classList.remove('blink'));
                    const randomIndex = Math.floor(Math.random() * resultados.length);
                    resultados[randomIndex].classList.add('blink');
                   
                    count++;
                   
                    if (count >= maxBlinks) {
                        clearInterval(blinkInterval);
                        setTimeout(() => {
                            resultados.forEach(r => r.classList.remove('blink'));
                            callback();
                        }, interval);
                    }
                }, interval);
            }
           
            // Função para sortear um resultado
            function sortearResultado() {
    sortearBtn.disabled = true;
    resultadoFinal.textContent = 'Sorteando...';
    resultadoFinal.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';

    // Remove classes de resultado anterior
    resultados.forEach(resultado => {
        resultado.classList.remove('positive', 'negative');
    });

    // Inicia a animação de pré-sorteio
    animacaoPreSorteio(() => {
        // Aqui, ajustamos a probabilidade para 60% positivo e 40% negativo
        const probabilidadePositivo = Math.random();
        const positivoChance = 0.6; // 60%
        let resultadoSorteado;
        let valor;

        if (probabilidadePositivo < positivoChance) {
            // Seleciona um resultado positivo
            const positivos = Array.from(resultados).filter(r => parseInt(r.dataset.value) > 0);
            const randomIndex = Math.floor(Math.random() * positivos.length);
            resultadoSorteado = positivos[randomIndex];
            valor = parseInt(resultadoSorteado.dataset.value);
        } else {
            // Seleciona um resultado negativo
            const negativos = Array.from(resultados).filter(r => parseInt(r.dataset.value) < 0);
            const randomIndex = Math.floor(Math.random() * negativos.length);
            resultadoSorteado = negativos[randomIndex];
            valor = parseInt(resultadoSorteado.dataset.value);
        }

        ultimoValorSorteado = valor;

        // Adiciona a classe de acordo com o resultado
        if (valor > 0) {
            resultadoSorteado.classList.add('positive');
            resultadoFinal.textContent = `🎉 Resultado Positivo: +${valor}`;
            resultadoFinal.style.backgroundColor = 'rgba(76, 175, 80, 0.3)';
        } else {
            resultadoSorteado.classList.add('negative');
            resultadoFinal.textContent = `⚠️ Resultado Negativo: ${valor}`;
            resultadoFinal.style.backgroundColor = 'rgba(244, 67, 54, 0.3)';
        }

        // Habilita o botão novamente
        sortearBtn.disabled = false;
    });
}

            // Função para atualizar os valores ao clicar nos círculos
            function atualizarValor(elementoValor, valor) {
                const valorAtual = parseInt(elementoValor.textContent);
                const novoValor = valorAtual + ultimoValorSorteado;
                elementoValor.textContent = novoValor;
                
                // Efeito visual
                elementoValor.style.transform = 'scale(1.2)';
                elementoValor.style.color = ultimoValorSorteado > 0 ? '#4caf50' : '#f44336';
                setTimeout(() => {
                    elementoValor.style.transform = 'scale(1)';
                    elementoValor.style.color = 'white';
                }, 500);
            }

            // Event listeners para os círculos
            circle1.addEventListener('click', () => {
                if (ultimoValorSorteado !== 0) {
                    atualizarValor(value1, ultimoValorSorteado);
                }
            });

            circle2.addEventListener('click', () => {
                if (ultimoValorSorteado !== 0) {
                    atualizarValor(value2, ultimoValorSorteado);
                }
            });
           
            // Evento de clique no botão de sorteio
            sortearBtn.addEventListener('click', sortearResultado);
        });
    </script>
</body>
</html>



